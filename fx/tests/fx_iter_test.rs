//! file: fx_iter_test.rs
//! author: Jacob Xie
//! date: 2023/03/03 21:44:41 Friday
//! brief:

use fx::ab::FromSlice;
use fx::array::*;
use fx::cont::{ArcArr, ArcVec};

#[test]
fn into_inner_test() {
    // ================================================================================================
    // Arr
    // ================================================================================================

    let p_arr = PrimitiveArray::<i32>::from([Some(1), None, Some(3)]);

    println!("{:?}", p_arr);

    let p_arr_inner = p_arr.into_inner();

    println!("{:?}", p_arr_inner);

    // ================================================================================================
    // Vec
    // ================================================================================================

    let p_vec = MutablePrimitiveArray::<i32>::from([Some(5), None, Some(7)]);

    println!("{:?}", p_vec);

    let p_vec_inner = p_vec.into_inner();

    println!("{:?}", p_vec_inner);
}

#[test]
fn iter_test() {
    // ================================================================================================
    // Arr
    // ================================================================================================

    let p_arr = PrimitiveArray::<i32>::from([Some(1), None, Some(3)]);

    for i in p_arr.iter() {
        println!("{:?}", i);
    }

    // ================================================================================================
    // Vec
    // ================================================================================================

    let p_vec = MutablePrimitiveArray::<i32>::from([Some(5), None, Some(7)]);

    for i in p_vec.iter() {
        println!("{:?}", i);
    }
}

// TODO
#[test]
fn arc_iter_test() {
    // ================================================================================================
    // Arr
    // ================================================================================================

    let _p_arr = ArcArr::from_slice(&[1, 2, 3]);

    // ================================================================================================
    // Vec
    // ================================================================================================

    let _p_vec = ArcVec::from_slice(&[1, 2, 3]);
}
